/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.querySelector(\".header__burger\").addEventListener(\"click\", (e) => {\r\n    const burger = e.currentTarget;\r\n    const menu = document.querySelector(\".header__nav\");\r\n\r\n    burger.classList.toggle(\"header__burger_open\")\r\n    menu.classList.toggle(\"header__nav_open\")\r\n\r\n    if (!headerEl.classList.contains(\"header_scroll\")) {\r\n        headerEl.querySelector(\".header__bg\").classList.toggle(\"header__bg_visible\")\r\n    }\r\n\r\n    document.body.classList.toggle(\"body_lock\")\r\n})\r\n\r\n// Header\r\nconst headerEl = document.querySelector(\".header\");\r\n\r\n// const callback = function(entries, observer) {\r\n//     if (entries[0].isIntersecting) {\r\n//         headerEl.classList.remove(\"header_scroll\")\r\n//     } else {\r\n//         headerEl.classList.add(\"header_scroll\")\r\n//     }\r\n// }\r\n\r\n// const headerObserver = new IntersectionObserver(callback)\r\n// headerObserver.observe(headerEl)\r\n\r\ndocument.querySelector(\".hero__button\").addEventListener(\"click\", (e) => {\r\n    const popup = document.querySelector(\".header__popup\")\r\n\r\n    document.body.classList.add(\"body_lock\");\r\n    popup.classList.add(\"header__popup_open\")\r\n})\r\n\r\nfunction closePopup(e) {\r\n    const popup = document.querySelector(\".header__popup\")\r\n    if (e.target.classList.contains(\"header__popup-container\") || e.target.classList.contains(\"header__popup-close\")) {\r\n        popup.classList.remove(\"header__popup_open\")\r\n        popup.addEventListener(\"transitionend\", () => {\r\n            popup.querySelector(\".header__popup-input_required\").classList.remove(\"header__popup-input_error\")\r\n            popup.classList.contains(\"header__popup_form-sent\") && popup.classList.remove(\"header__popup_form-sent\")\r\n            popup.querySelector(\"form\").reset()\r\n            document.body.classList.remove(\"body_lock\")\r\n        }, { once: true })\r\n    }\r\n}\r\n\r\ndocument.querySelector(\".header__popup-container\").addEventListener(\"click\", closePopup)\r\ndocument.querySelector(\".header__popup-close\").addEventListener(\"click\", closePopup)\r\n\r\ndocument.addEventListener(\"scroll\", () => {\r\n    if (window.pageYOffset > 100 && !headerEl.classList.contains(\"header_scroll\"))\r\n        headerEl.classList.add(\"header_scroll\")\r\n    if (window.pageYOffset < 100 && headerEl.classList.contains(\"header_scroll\"))\r\n        headerEl.classList.remove(\"header_scroll\")\r\n})\r\n\r\nconst swiper = new Swiper('.swiper', {\r\n    // Optional parameters\r\n    direction: 'horizontal',\r\n    loop: true,\r\n\r\n    // If we need pagination\r\n    pagination: {\r\n        el: '.swiper-pagination',\r\n    },\r\n\r\n    // Navigation arrows\r\n    navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n    },\r\n});\r\n\r\n\r\ndocument.querySelector(\".header__popup-form\").addEventListener(\"submit\", (e) => {\r\n    function changeContentPage(form) {\r\n        form.closest(\".header__popup-content\").style.opacity = \"0\"\r\n        form.closest(\".header__popup-content\").addEventListener(\"transitionend\", () => {\r\n            form.reset()\r\n            form.closest(\".header__popup\").classList.add(\"header__popup_form-sent\");\r\n            form.closest(\".header__popup-content\").style.opacity = \"1\"\r\n        }, { once: true })\r\n    }\r\n\r\n    const reqFiedls = e.target.querySelectorAll('.header__popup-input_required')\r\n\r\n    e.preventDefault();\r\n    let errors = 0;\r\n    for (let i = 0; i < reqFiedls.length; i++) {\r\n        if (reqFiedls[i].getAttribute(\"name\") === \"phone\") {\r\n            if (reqFiedls[i].value.trim() === \"\" || reqFiedls[i].value.length < 15) {\r\n                reqFiedls[i].classList.add(\"header__popup-input_error\");\r\n                errors++;\r\n            }\r\n        }\r\n    }\r\n    if (errors) {\r\n        console.log(\"Fill req fields\");\r\n    } else {\r\n        // sendForm(form)\r\n        setTimeout(() => {\r\n            changeContentPage(e.target)\r\n        })\r\n    }\r\n})\r\n\r\n// validate inputs\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\ndocument.querySelectorAll(\"input[name='phone']\").forEach(inputElement => {\r\n    inputElement.addEventListener(\"keypress\", (e) => {\r\n        const length = e.target.value.length;\r\n        if (e.charCode < 48 || e.charCode > 57 || length > 14) {\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        switch (length) {\r\n            case 0: \r\n                e.target.value = \"8 \" ;\r\n                break;\r\n            case 5:\r\n            case 9:\r\n            case 12:\r\n                e.target.value += \" \";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    })\r\n    inputElement.addEventListener(\"input\", e => {e.target.value.length === 2 && (e.target.value = \"\")})\r\n})\r\n\r\ndocument.querySelector(\".header__popup-input_required\").addEventListener(\"input\", (e) => {\r\n    if (e.target.classList.contains(\"form__input_error\")) {\r\n        e.target.classList.remove(\"form__input_error\")\r\n    }\r\n})\r\n\r\ndocument.querySelector(\".contacts__form\").addEventListener(\"submit\", e => {\r\n    e.preventDefault();\r\n    const emailValue = e.target.querySelector(\"input[type='email']\").value;\r\n\r\n    if (validateEmail(emailValue)) {\r\n        e.target.reset();\r\n    } else {\r\n        e.target.querySelector(\"input[type='email']\").classList.add('contacts__input_error')\r\n    }\r\n})\r\n\r\ndocument.querySelector(\"input[type='email']\").addEventListener(\"input\", (e) => {\r\n    if (e.target.classList.contains(\"contacts__input_error\")) {\r\n        e.target.classList.remove(\"contacts__input_error\")\r\n    }\r\n})\n\n//# sourceURL=webpack://gulp-start/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;